<web-app id="WebApp_ID" version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
         
  <display-name>HTRC RESTful Data Access API</display-name>
  
  <servlet>
    <servlet-name>jersey-servlet</servlet-name>
    <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
    <init-param>
      <!-- param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>edu.indiana.d2i.htrc.access</param-value -->
      <param-name>javax.ws.rs.Application</param-name>
      <param-value>edu.indiana.d2i.htrc.access.HTRCDataAccessApplication</param-value>
    </init-param>
    <init-param>
      <param-name>cassandra.node.count</param-name>
      <param-value>1</param-value>
    </init-param>
    <init-param>
      <param-name>cassandra.node.name.1</param-name>
      <param-value>htrc.cassandra.node</param-value>
    </init-param>
    <init-param>
      <param-name>cassandra.cluster.name</param-name>
      <param-value>TestCluster</param-value>
    </init-param>
    <init-param>
      <param-name>cassandra.keyspace.name</param-name>
      <param-value>TestCorpus</param-value>
    </init-param>
    <init-param>
      <param-name>volume.content.cf.name</param-name>
      <param-value>VolumeContents</param-value>
    </init-param>
    <init-param>
      <param-name>hector.access.max.attempts</param-name>
      <param-value>5</param-value>
    </init-param>
    <init-param>
      <param-name>hector.access.fail.init.delay</param-name>
      <param-value>200</param-value>
    </init-param>
    <init-param>
      <param-name>hector.access.fail.max.delay</param-name>
      <param-value>5000</param-value>
    </init-param>
    <init-param>
      <param-name>async.worker.count</param-name>
      <param-value>8</param-value>
    </init-param>
    <init-param>
      <param-name>max.pages.per.retrieval</param-name>
      <param-value>200</param-value>
    </init-param>
    <init-param>
      <param-name>max.async.fetch.entry.count</param-name>
      <param-value>15</param-value>
    </init-param>
    <init-param>
      <param-name>min.entry.count.trigger.dispatch</param-name>
      <param-value>3</param-value>
    </init-param>
    <init-param>
      <param-name>max.exceptions.to.report</param-name>
      <param-value>100</param-value>
    </init-param>
    <init-param>
      <param-name>max.volumes.allowed</param-name>
      <param-value>0</param-value>
    </init-param>
    <init-param>
      <param-name>max.total.pages.allowed</param-name>
      <param-value>0</param-value>
    </init-param>
    <init-param>
      <param-name>max.pages.per.volume.allowed</param-name>
      <param-value>0</param-value>
    </init-param>
    <init-param>
      <param-name>auditor.class</param-name>
      <param-value>edu.indiana.d2i.htrc.audit.Log4jAuditor</param-value>
    </init-param>
    <init-param>
      <param-name>log4j.properties.path</param-name>
      <param-value>log4j.properties</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <filter>
    <filter-name>oauth2-filter</filter-name>
    <filter-class>edu.indiana.d2i.htrc.oauth2.filter.OAuth2Filter</filter-class>
    <init-param>
      <param-name>oauth2.provider.url</param-name>
      <param-value>http://htrc.oauth2:65535/services/</param-value>
    </init-param>
    <init-param>
      <param-name>oauth2.provider.user</param-name>
      <param-value>userx</param-value>
    </init-param>
    <init-param>
      <param-name>oauth2.provider.password</param-name>
      <param-value>passwordx</param-value>
    </init-param>
    
    <!-- trustStore and trustPassword only needed if WSO2 IS is using a self-signed certificate -->
    <!--  init-param>
      <param-name>javax.net.ssl.trustStore</param-name>
      <param-value>/path/to/trust/store.jks</param-value>
    </init-param>
    <init-param>
      <param-name>javax.net.ssl.trustStorePassword</param-name>
      <param-value>password-4-jks</param-value>
    </init-param -->

    <init-param>
      <param-name>log4j.properties.path</param-name>
      <param-value>log4j.properties</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>oauth2-filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <servlet-mapping>
    <servlet-name>jersey-servlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>
  
   <!-- resource-ref>
    <description>db conn</description>
    <res-ref-name>jdbc/oauthStore</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref -->

  
</web-app>
